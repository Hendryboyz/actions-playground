name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
env:
  # Setting an environment variable with the value of a configuration variable
  env_var: dev
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  Image-Build:
    name: Build image
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Environment variables substitution
        id: build-image
        run: |
          echo ${{ vars.ENV_WORDS }}
          envsubst < .env.local > .env
          echo "Generated .env file"
          cat .env
          echo "image=nginx:stable-alpine3.20-perl" >> $GITHUB_OUTPUT
      
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: tasks/${{ env.env_var }}/backend.json
          container-name: backend-app
          image: ${{ steps.build-image.outputs.image }}
      
      - name: Check definition
        run: |
          cat ${{ steps.task-def.outputs.task-definition }}


